input _pageInation {
  numberPerPage: Int!
  pageNumber: Int!
}
type _time {
  tag: Int!
  monat: Int!
  jahr: Int!
  h: Int!
  min: Int!
  s: Int!
  german: String!
  input: String!
}
type _date {
  tag: Int!
  monat: Int!
  jahr: Int!
  german: String!
  input: String!
}
input _date_i {
  tag: Int!
  monat: Int!
  jahr: Int!
}
input _date_id {
  tag: Int!
  monat: Int!
  jahr: Int!
}
enum AKStatus {
  AUSGETRETEN
  MITGLIED
  VERTRETER
  LEITER
}
enum ecStatus {
  KEIN_MITGLIED
  MITGLIED
  FOERDERER
}
enum ROLLE {
  TEILNEHMER
  MITARBEITER
  KUECHENHELFER
  KUECHENLEITER
  LEITER
  HAUPTLEITER
}
enum _geschlecht {
  MAENLICH
  WEIBLICH
}
type User {
  userID: ID!
  username: String!
  person: Person!
  salt: String!
  pwdHash: String!
  userGroup: uGroup!
  gueltigBis: _date!
}
enum uGroup {
  NONE
  ADMIN
  SUPERADMIN
}
type AK {
  _nodeID: ID
  bezeichnung: String!
  personen: [PersonAK]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input AK_id {
  _nodeID: ID
}
type _AK_result {
  pageCount: Int!
  items: [AK]
}
input _AK_filter {
  _filter: [String]
  bezeichnung: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _AK_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input AK_i {
  bezeichnung: String!
}
input AK_ie {
  bezeichnung: String
}
type Person {
  _nodeID: ID
  vorname: String!
  nachname: String!
  gebDat: _date!
  geschlecht: _geschlecht!
  juLeiCaNr: String
  aks: [PersonAK]
  aktuelleAdresse: Adresse
  adressen: [PersonAdresse]
  aktuelleEmail: Email
  emails: [PersonEmail]
  fzs: [FZ]
  aktuellesFZ: FZ
  letzterFZAntrag: _date
  ecKreis: ECKreis
  ECMitgliedsStatus: ecStatus
  kategorien: [Kategorie]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Person_id {
  _nodeID: ID
}
type _Person_result {
  pageCount: Int!
  items: [Person]
}
input _Person_filter {
  _filter: [String]
  vorname: [String]
  nachname: [String]
  gebDat: [String]
  geschlecht: [String]
  juLeiCaNr: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Person_sort_by {
  vorname_asc
  vorname_dsc
  nachname_asc
  nachname_dsc
  gebDat_asc
  gebDat_dsc
  geschlecht_asc
  geschlecht_dsc
  juLeiCaNr_asc
  juLeiCaNr_dsc
}
input Person_i {
  vorname: String!
  nachname: String!
  gebDat: _date_i!
  geschlecht: _geschlecht!
}
input Person_ie {
  vorname: String
  nachname: String
  gebDat: _date_id
  letzterFZAntrag: _date_id
  ecKreis: ECKreis_id
  ECMitgliedsStatus: ecStatus
}
type Kategorie {
  _nodeID: ID
  label: String!
  personen: [Person]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Kategorie_id {
  _nodeID: ID
  label: String
}
input Kategorie_i {
  label: String!
}
type PersonAK {
  _nodeID: ID
  Person: Person!
  AK: AK!
  currentStatus: AKUpdate!
  updates: [AKUpdate]!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input PersonAK_id {
  _nodeID: ID
}
type AKUpdate {
  _nodeID: ID
  status: AKStatus!
  date: _date!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input AKUpdate_id {
  _nodeID: ID
}
type Adresse {
  _nodeID: ID
  strasse: String!
  plz: String!
  ort: String!
  land: String
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Adresse_id {
  _nodeID: ID
}
type _Adresse_result {
  pageCount: Int!
  items: [Adresse]
}
input _Adresse_filter {
  _filter: [String]
  strasse: [String]
  plz: [String]
  ort: [String]
  land: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Adresse_sort_by {
  strasse_asc
  strasse_dsc
  plz_asc
  plz_dsc
  ort_asc
  ort_dsc
  land_asc
  land_dsc
}
input Adresse_i {
  strasse: String!
  plz: String!
  ort: String!
  land: String
}
input Adresse_ie {
  strasse: String
  plz: String
  ort: String
  land: String
}
type PersonAdresse {
  _nodeID: ID
  adresse: Adresse!
  veraltet: Boolean!
  letzteNutzung: _date!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input PersonAdresse_id {
  _nodeID: ID
}
input PersonAdresse_ie {
  veraltet: Boolean
  letzteNutzung: _date_id
}
type Email {
  _nodeID: ID
  email: String!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Email_id {
  _nodeID: ID
  email: String
}
input Email_i {
  email: String!
}
type PersonEmail {
  _nodeID: ID
  email: Email!
  veraltet: Boolean!
  letzteNutzung: _date!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input PersonEmail_id {
  _nodeID: ID
}
input PersonEmail_ie {
  veraltet: Boolean
  letzteNutzung: _date_id
}
type Telefon {
  _nodeID: ID
  telefon: String!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Telefon_id {
  _nodeID: ID
}
type _Telefon_result {
  pageCount: Int!
  items: [Telefon]
}
input _Telefon_filter {
  _filter: [String]
  telefon: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Telefon_sort_by {
  telefon_asc
  telefon_dsc
}
input Telefon_i {
  telefon: String!
}
type PersonTelefon {
  _nodeID: ID
  telefon: Telefon!
  veraltet: Boolean!
  letzteNutzung: _date!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input PersonTelefon_id {
  _nodeID: ID
}
input PersonTelefon_ie {
  veraltet: Boolean
  letzteNutzung: _date_id
}
type ECKreis {
  _nodeID: ID
  bezeichnung: String!
  adresse: Adresse!
  website: String!
  personen: [Person]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input ECKreis_id {
  _nodeID: ID
}
type _ECKreis_result {
  pageCount: Int!
  items: [ECKreis]
}
input _ECKreis_filter {
  _filter: [String]
  bezeichnung: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _ECKreis_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input ECKreis_i {
  bezeichnung: String!
  adresse: Adresse_i!
  website: String!
}
input ECKreis_ie {
  bezeichnung: String
  adresse: Adresse_id
  website: String
}
type FZ {
  _nodeID: ID
  gesehenAm: _date!
  gesehenVon: Person!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input FZ_id {
  _nodeID: ID
}
type Organisation {
  _nodeID: ID
  bezeichnung: String!
  anschrift: Adresse!
  telefon: [Telefon]
  email: [Email]
  veranstaltungsorte: [Veranstaltungsort]
  veranstaltungen: [Veranstaltung]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Organisation_id {
  _nodeID: ID
}
type _Organisation_result {
  pageCount: Int!
  items: [Organisation]
}
input _Organisation_filter {
  _filter: [String]
  bezeichnung: [String]
  anschrift: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Organisation_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input Organisation_i {
  bezeichnung: String!
  anschrift: Adresse_i!
}
input Organisation_ie {
  bezeichnung: String
  anschrift: Adresse_id
}
type Veranstaltungsort {
  _nodeID: ID
  bezeichnung: String!
  organisation: Organisation!
  anschrift: Adresse!
  telefon: [Telefon]
  email: [Email]
  veranstaltungen: [Veranstaltung]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Veranstaltungsort_id {
  _nodeID: ID
}
type _Veranstaltungsort_result {
  pageCount: Int!
  items: [Veranstaltungsort]
}
input _Veranstaltungsort_filter {
  _filter: [String]
  bezeichnung: [String]
  anschrift: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Veranstaltungsort_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input Veranstaltungsort_i {
  bezeichnung: String!
  organisation: Organisation_i!
  anschrift: Adresse_i!
}
input Veranstaltungsort_ie {
  bezeichnung: String
  organisation: Organisation_id
  anschrift: Adresse_id
}
type Veranstaltung {
  _nodeID: ID
  bezeichnung: String!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Veranstaltung_id {
  _nodeID: ID
}
type _Veranstaltung_result {
  pageCount: Int!
  items: [Veranstaltung]
}
input _Veranstaltung_filter {
  _filter: [String]
  bezeichnung: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Veranstaltung_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input Veranstaltung_i {
  bezeichnung: String!
}
input Veranstaltung_ie {
  bezeichnung: String
}
type Anmeldung {
  _nodeID: ID
  anmeldeID: ID!
  veranstaltung: Veranstaltung
  person: Person
  role: Role
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Anmeldung_id {
  _nodeID: ID
  anmeldeID: ID
}
type _Anmeldung_result {
  pageCount: Int!
  items: [Anmeldung]
}
input _Anmeldung_filter {
  _filter: [String]
  anmeldeID: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Anmeldung_sort_by {
  anmeldeID_asc
  anmeldeID_dsc
}
input Anmeldung_i {
  veranstaltung: Veranstaltung_i
  person: Person_i
  role: Role_i
}
input Anmeldung_ie {
  anmeldeID: ID
  veranstaltung: Veranstaltung_id
}
type FinanzTransaktion {
  _nodeID: ID
  betrag: Int!
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input FinanzTransaktion_id {
  _nodeID: ID
}
input FinanzTransaktion_i {
  betrag: Int!
}
type Role {
  _nodeID: ID
  bezeichnung: String!
  anmeldungen: [Anmeldung]
  createdAt: _time!
  updatedAt: _time!
  createdBy: User!
  updatedBy: User!
}
input Role_id {
  _nodeID: ID
}
type _Role_result {
  pageCount: Int!
  items: [Role]
}
input _Role_filter {
  _filter: [String]
  bezeichnung: [String]
  createdAt: [String]
  updatedAt: [String]
  createdBy: [String]
  updatedBy: [String]
}
enum _Role_sort_by {
  bezeichnung_asc
  bezeichnung_dsc
}
input Role_i {
  bezeichnung: String!
}
input Role_ie {
  bezeichnung: String
}
type Query {
  AK_list(
    sort: _AK_sort_by
    filter: _AK_filter
    pageination: _pageInation
  ): _AK_result
  AK_ID(id: AK_id!): AK
  Person_list(
    sort: _Person_sort_by
    filter: _Person_filter
    pageination: _pageInation
  ): _Person_result
  Person_ID(id: Person_id!): Person
  Kategorie_ID(id: Kategorie_id!): Kategorie
  PersonAK_ID(id: PersonAK_id!): PersonAK
  AKUpdate_ID(id: AKUpdate_id!): AKUpdate
  Adresse_list(
    sort: _Adresse_sort_by
    filter: _Adresse_filter
    pageination: _pageInation
  ): _Adresse_result
  Adresse_ID(id: Adresse_id!): Adresse
  PersonAdresse_ID(id: PersonAdresse_id!): PersonAdresse
  Email_ID(id: Email_id!): Email
  PersonEmail_ID(id: PersonEmail_id!): PersonEmail
  Telefon_list(
    sort: _Telefon_sort_by
    filter: _Telefon_filter
    pageination: _pageInation
  ): _Telefon_result
  Telefon_ID(id: Telefon_id!): Telefon
  PersonTelefon_ID(id: PersonTelefon_id!): PersonTelefon
  ECKreis_list(
    sort: _ECKreis_sort_by
    filter: _ECKreis_filter
    pageination: _pageInation
  ): _ECKreis_result
  ECKreis_ID(id: ECKreis_id!): ECKreis
  FZ_ID(id: FZ_id!): FZ
  Organisation_list(
    sort: _Organisation_sort_by
    filter: _Organisation_filter
    pageination: _pageInation
  ): _Organisation_result
  Organisation_ID(id: Organisation_id!): Organisation
  Veranstaltungsort_list(
    sort: _Veranstaltungsort_sort_by
    filter: _Veranstaltungsort_filter
    pageination: _pageInation
  ): _Veranstaltungsort_result
  Veranstaltungsort_ID(id: Veranstaltungsort_id!): Veranstaltungsort
  Veranstaltung_list(
    sort: _Veranstaltung_sort_by
    filter: _Veranstaltung_filter
    pageination: _pageInation
  ): _Veranstaltung_result
  Veranstaltung_ID(id: Veranstaltung_id!): Veranstaltung
  Anmeldung_list(
    sort: _Anmeldung_sort_by
    filter: _Anmeldung_filter
    pageination: _pageInation
  ): _Anmeldung_result
  Anmeldung_ID(id: Anmeldung_id!): Anmeldung
  FinanzTransaktion_ID(id: FinanzTransaktion_id!): FinanzTransaktion
  Role_list(
    sort: _Role_sort_by
    filter: _Role_filter
    pageination: _pageInation
  ): _Role_result
  Role_ID(id: Role_id!): Role
  users: [User]
  user(userID: ID!): User
}
type Mutation {
  AK_ADD(value: AK_i): AK
  AK_EDIT(id: AK_id, value: AK_ie): AK
  Person_ADD(value: Person_i): Person
  Person_EDIT(id: Person_id, value: Person_ie): Person
  Kategorie_ADD(value: Kategorie_i): Kategorie
  Adresse_ADD(value: Adresse_i): Adresse
  Adresse_EDIT(id: Adresse_id, value: Adresse_ie): Adresse
  PersonAdresse_EDIT(
    id: PersonAdresse_id
    value: PersonAdresse_ie
  ): PersonAdresse
  Email_ADD(value: Email_i): Email
  PersonEmail_EDIT(id: PersonEmail_id, value: PersonEmail_ie): PersonEmail
  Telefon_ADD(value: Telefon_i): Telefon
  PersonTelefon_EDIT(
    id: PersonTelefon_id
    value: PersonTelefon_ie
  ): PersonTelefon
  ECKreis_ADD(value: ECKreis_i): ECKreis
  ECKreis_EDIT(id: ECKreis_id, value: ECKreis_ie): ECKreis
  Organisation_ADD(value: Organisation_i): Organisation
  Organisation_EDIT(id: Organisation_id, value: Organisation_ie): Organisation
  Veranstaltungsort_ADD(value: Veranstaltungsort_i): Veranstaltungsort
  Veranstaltungsort_EDIT(
    id: Veranstaltungsort_id
    value: Veranstaltungsort_ie
  ): Veranstaltungsort
  Veranstaltung_ADD(value: Veranstaltung_i): Veranstaltung
  Veranstaltung_EDIT(
    id: Veranstaltung_id
    value: Veranstaltung_ie
  ): Veranstaltung
  Anmeldung_ADD(value: Anmeldung_i): Anmeldung
  Anmeldung_EDIT(id: Anmeldung_id, value: Anmeldung_ie): Anmeldung
  FinanzTransaktion_ADD(value: FinanzTransaktion_i): FinanzTransaktion
  Role_ADD(value: Role_i): Role
  Role_EDIT(id: Role_id, value: Role_ie): Role
  login(username: String!, password: String!): User
  logOut: Boolean!
  User_changePWD(oldPWD: String!, newPWD: String!): Boolean!
  User_add(
    username: String!
    person: Person_id!
    userGroup: uGroup!
    gueltigBis: _date_i
  ): User
  User_edit(userID: ID!, userGroup: uGroup!, gueltigBis: _date_i!): User
}
